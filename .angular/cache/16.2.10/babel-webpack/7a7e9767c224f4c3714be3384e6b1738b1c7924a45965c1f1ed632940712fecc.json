{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport * as i0 from \"@angular/core\";\nexport class DashboardNavComponent {\n  constructor() {\n    this.breakpointObserver = inject(BreakpointObserver);\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n  }\n  static #_ = this.ɵfac = function DashboardNavComponent_Factory(t) {\n    return new (t || DashboardNavComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardNavComponent,\n    selectors: [[\"dashboard\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 0,\n    template: function DashboardNavComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"dashboard works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, CommonModule],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["inject","CommonModule","BreakpointObserver","Breakpoints","map","shareReplay","MatToolbarModule","MatButtonModule","MatSidenavModule","MatIconModule","MatListModule","DashboardNavComponent","constructor","breakpointObserver","isHandset$","observe","Handset","pipe","result","matches","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","template","DashboardNavComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles"],"sources":["/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/dashboard/dashboard.component.ts","/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\n@Component({\n  selector: 'dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    CommonModule,\n  ],\n})\nexport class DashboardNavComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n}\n","<p>dashboard works!</p>\n"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,kBAAkB,EAAEC,WAAW,QAAQ,qBAAqB;AAErE,SAASC,GAAG,EAAEC,WAAW,QAAQ,gBAAgB;AACjD,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,aAAa,QAAQ,wBAAwB;;AAgBtD,OAAM,MAAOC,qBAAqB;EAdlCC,YAAA;IAeU,KAAAC,kBAAkB,GAAGb,MAAM,CAACE,kBAAkB,CAAC;IAEvD,KAAAY,UAAU,GAAwB,IAAI,CAACD,kBAAkB,CACtDE,OAAO,CAACZ,WAAW,CAACa,OAAO,CAAC,CAC5BC,IAAI,CACHb,GAAG,CAAEc,MAAM,IAAKA,MAAM,CAACC,OAAO,CAAC,EAC/Bd,WAAW,EAAE,CACd;;EACJ,QAAAe,CAAA,G;qBATYT,qBAAqB;EAAA;EAAA,QAAAU,EAAA,G;UAArBV,qBAAqB;IAAAW,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAC,EAAA,CAAAC,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCzBlCN,EAAA,CAAAQ,cAAA,QAAG;QAAAR,EAAA,CAAAS,MAAA,uBAAgB;QAAAT,EAAA,CAAAU,YAAA,EAAI;;;mBDiBnB7B,gBAAgB,EAChBC,eAAe,EACfC,gBAAgB,EAChBC,aAAa,EACbC,aAAa,EACbT,YAAY;IAAAmC,MAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}