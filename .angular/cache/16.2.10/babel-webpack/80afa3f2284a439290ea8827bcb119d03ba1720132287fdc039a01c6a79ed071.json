{"ast":null,"code":"import { inject } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/divider\";\nimport * as i2 from \"../device-map/device-map.component\";\nimport * as i3 from \"../device-table/device-table.component\";\nimport * as i4 from \"../device-data/device-data.component\";\nimport * as i5 from \"../device-stats/device-stats.component\";\nconst ELEMENT_DATA = [\n  // Your data\n];\nexport class DashboardComponent {\n  constructor() {\n    this.breakpointObserver = inject(BreakpointObserver);\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n    this.dataSource = ELEMENT_DATA;\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 13,\n    vars: 4,\n    consts: [[3, \"Devicelist\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \" Can add ngclass that defines a hidden which only shows the hamburger side nav if the user is on handheld mode, mode makes the side bar either push or appear over main page \");\n        i0.ɵɵtext(1, \" Add Content Here, ng-content is used for angular content projection so we can add stuff in tool-bar wrapper in app html \");\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelement(3, \"app-device-data\", 0)(4, \"mat-divider\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\");\n        i0.ɵɵelement(6, \"app-device-stats\", 0)(7, \"mat-divider\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\");\n        i0.ɵɵelement(9, \"app-device-table\", 0)(10, \"mat-divider\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\");\n        i0.ɵɵelement(12, \"app-device-map\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"Devicelist\", ctx.dataSource);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"Devicelist\", ctx.dataSource);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"Devicelist\", ctx.dataSource);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"Devicelist\", ctx.dataSource);\n      }\n    },\n    dependencies: [i1.MatDivider, i2.DeviceMapComponent, i3.DeviceTableComponent, i4.DeviceDataComponent, i5.DeviceStatsComponent],\n    styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n    height: 100%;\\n}\\n\\n.sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\\n    background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n    position: sticky;\\n    top: 0;\\n    z-index: 1;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nmat-toolbar[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between; \\n\\n    align-items: center; \\n\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    color: white;\\n    text-decoration: none;\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    margin: 0 10px; \\n\\n    color: white;\\n    text-decoration: none;\\n}\\n\\n.push-links-right[_ngcontent-%COMP%]  {\\n    margin-left: auto;\\n    \\n\\n}\\n.push-links-left[_ngcontent-%COMP%]  {\\n    \\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixNQUFNO0lBQ04sVUFBVTtBQUNkOztBQUVBOzs7OztHQUtHOztBQUVIO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QixFQUFFLDhDQUE4QztJQUM5RSxtQkFBbUIsRUFBRSw0QkFBNEI7QUFDckQ7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsWUFBWTtJQUNaLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixjQUFjLEVBQUUsMkJBQTJCO0lBQzNDLFlBQVk7SUFDWixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsNkJBQTZCO0FBQ2pDO0FBQ0E7SUFDSSw2QkFBNkI7QUFDakMiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZW5hdi1jb250YWluZXIge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uc2lkZW5hdiAubWF0LXRvb2xiYXIge1xyXG4gICAgYmFja2dyb3VuZDogaW5oZXJpdDtcclxufVxyXG5cclxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcclxuICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4vKiAucHVzaC1saW5rcy1yaWdodCB7XHJcbiAgICBmbGV4OiAxIDEgMTAwJTsgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgXHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyBcclxufSAqL1xyXG5cclxubWF0LXRvb2xiYXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgLyogQWxpZ24gaXRlbXMgYXQgYm90aCBlbmRzIG9mIHRoZSBjb250YWluZXIgKi9cclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IC8qIENlbnRlciBpdGVtcyB2ZXJ0aWNhbGx5ICovXHJcbn1cclxuXHJcbm1hdC10b29sYmFyIGEge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG5tYXQtdG9vbGJhciBwIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbjogMCAxMHB4OyAvKiBBZGQgbWFyZ2luIGZvciBzcGFjaW5nICovXHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi5wdXNoLWxpbmtzLXJpZ2h0ICB7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyAqL1xyXG59XHJcbi5wdXNoLWxpbmtzLWxlZnQgIHtcclxuICAgIC8qIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyAqL1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["inject","BreakpointObserver","Breakpoints","map","shareReplay","ELEMENT_DATA","DashboardComponent","constructor","breakpointObserver","isHandset$","observe","Handset","pipe","result","matches","dataSource","_","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","i0","ɵɵtext","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/dashboard/dashboard.component.ts","/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n\nexport interface DeviceElement {\n  endDeviceId: number;\n  appId: number;\n  packetLoss: number[];\n  gatewayId: string;\n  time: string[];\n  batteryStat: number[];\n}\n\nconst ELEMENT_DATA: DeviceElement[] = [\n  // Your data\n];\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  dataSource: DeviceElement[] = ELEMENT_DATA;\n}","<!--This is the side nave container, and it wraps everything because otherwaise the side bar wouldn't be able to pop out over page-->\n<!-- <div>    -->\n    <!-- <mat-sidenav-container class=\"sidenav-container\"> -->\n        Can add ngclass that defines a hidden which only shows the hamburger side nav if the user is on handheld mode, mode makes the side bar either push or appear over main page\n        <!-- <mat-sidenav -->\n            <!-- #drawer -->\n            <!-- class=\"sidenav\" -->\n            <!-- fixedInViewport=\"false\" -->\n            <!-- [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\" -->\n            <!-- [mode]=\"'over'\" -->\n            <!-- [opened]=\"false\" -->\n        <!-- > -->\n        <!-- <mat-toolbar>Organizations</mat-toolbar> -->\n        <!-- <button mat-raised-button color=\"accent\">Add</button> -->\n        <!-- <button mat-raised-button color=\"warn\">Remove</button> -->\n        <!-- <mat-nav-list> -->\n            <!-- <a mat-list-item href=\"#\">Organization 1</a> -->\n            <!-- <a mat-list-item href=\"#\">Organization 2</a> -->\n            <!-- <a mat-list-item href=\"#\">Organization 3</a> -->\n        <!-- </mat-nav-list> -->\n        <!-- </mat-sidenav> -->\n        <!-- <mat-sidenav-content> -->\n            <!-- <mat-toolbar color=\"primary\"> -->\n                <!-- <button -->\n                    <!-- type=\"button\" -->\n                    <!-- aria-label=\"Toggle sidenav\" -->\n                    <!-- mat-icon-button -->\n                    <!-- (click)=\"drawer.toggle()\" -->\n                <!-- > -->\n                    <!-- <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon> -->\n                <!-- </button> -->\n                <!-- <div class=\"push-links-left\"> -->\n                    <!-- <p>Organization Home</p> -->\n                <!-- </div> -->\n                <!-- <div class=\"push-links-right\"> -->\n                    <!-- <p>Hello,</p> -->\n                    <!-- <a href=\"#\">User Name</a> -->\n                <!-- </div> -->\n            <!-- </mat-toolbar> -->\n        Add Content Here, ng-content is used for angular content projection so we can add stuff in tool-bar wrapper in app html\n        <!-- <ng-content></ng-content> -->\n<!--  -->\n        <!-- </mat-sidenav-content> -->\n    <!-- </mat-sidenav-container> -->\n\n<div>\n    <app-device-data [Devicelist]=\"dataSource\"></app-device-data>\n    <mat-divider></mat-divider>\n</div>\n<div>\n    <app-device-stats [Devicelist]=\"dataSource\"></app-device-stats>\n    <mat-divider></mat-divider>\n</div>\n<div>\n    <app-device-table [Devicelist]=\"dataSource\"></app-device-table>\n    <mat-divider></mat-divider>\n</div>\n<div>\n    <app-device-map [Devicelist]=\"dataSource\"></app-device-map>\n</div>\n"],"mappings":"AAAA,SAAoBA,MAAM,QAAQ,eAAe;AACjD,SAASC,kBAAkB,EAAEC,WAAW,QAAQ,qBAAqB;AAErE,SAASC,GAAG,EAAEC,WAAW,QAAQ,gBAAgB;;;;;;;AAYjD,MAAMC,YAAY,GAAoB;EACpC;AAAA,CACD;AAMD,OAAM,MAAOC,kBAAkB;EAL/BC,YAAA;IAMU,KAAAC,kBAAkB,GAAGR,MAAM,CAACC,kBAAkB,CAAC;IAEvD,KAAAQ,UAAU,GAAwB,IAAI,CAACD,kBAAkB,CACtDE,OAAO,CAACR,WAAW,CAACS,OAAO,CAAC,CAC5BC,IAAI,CACHT,GAAG,CAAEU,MAAM,IAAKA,MAAM,CAACC,OAAO,CAAC,EAC/BV,WAAW,EAAE,CACd;IAEH,KAAAW,UAAU,GAAoBV,YAAY;;EAC3C,QAAAW,CAAA,G;qBAXYV,kBAAkB;EAAA;EAAA,QAAAW,EAAA,G;UAAlBX,kBAAkB;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCpBvBE,EAAA,CAAAC,MAAA,oLACA;QAmCAD,EAAA,CAAAC,MAAA,gIACA;QAKRD,EAAA,CAAAE,cAAA,UAAK;QACDF,EAAA,CAAAG,SAAA,yBAA6D;QAEjEH,EAAA,CAAAI,YAAA,EAAM;QACNJ,EAAA,CAAAE,cAAA,UAAK;QACDF,EAAA,CAAAG,SAAA,0BAA+D;QAEnEH,EAAA,CAAAI,YAAA,EAAM;QACNJ,EAAA,CAAAE,cAAA,UAAK;QACDF,EAAA,CAAAG,SAAA,0BAA+D;QAEnEH,EAAA,CAAAI,YAAA,EAAM;QACNJ,EAAA,CAAAE,cAAA,WAAK;QACDF,EAAA,CAAAG,SAAA,yBAA2D;QAC/DH,EAAA,CAAAI,YAAA,EAAM;;;QAbeJ,EAAA,CAAAK,SAAA,GAAyB;QAAzBL,EAAA,CAAAM,UAAA,eAAAP,GAAA,CAAAV,UAAA,CAAyB;QAIxBW,EAAA,CAAAK,SAAA,GAAyB;QAAzBL,EAAA,CAAAM,UAAA,eAAAP,GAAA,CAAAV,UAAA,CAAyB;QAIzBW,EAAA,CAAAK,SAAA,GAAyB;QAAzBL,EAAA,CAAAM,UAAA,eAAAP,GAAA,CAAAV,UAAA,CAAyB;QAI3BW,EAAA,CAAAK,SAAA,GAAyB;QAAzBL,EAAA,CAAAM,UAAA,eAAAP,GAAA,CAAAV,UAAA,CAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}