{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/toolbar\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/sidenav\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/list\";\nimport * as i6 from \"@angular/material/divider\";\nimport * as i7 from \"@angular/common\";\nconst _c0 = [\"*\"];\nexport class DashboardComponent {\n  constructor() {\n    this.breakpointObserver = inject(BreakpointObserver);\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c0,\n    decls: 35,\n    vars: 7,\n    consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"false\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"accent\"], [\"mat-raised-button\", \"\", \"color\", \"warn\"], [\"mat-list-item\", \"\", \"href\", \"#\"], [\"color\", \"primary\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"], [1, \"push-links-right\"], [\"href\", \"#\"], [3, \"Devicelist\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"dashboard works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-sidenav-container\", 0)(3, \"mat-sidenav\", 1, 2);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementStart(6, \"mat-toolbar\");\n        i0.ɵɵtext(7, \"Organizations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 3);\n        i0.ɵɵtext(9, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 4);\n        i0.ɵɵtext(11, \"Remove\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-nav-list\")(13, \"a\", 5);\n        i0.ɵɵtext(14, \"Organization 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"a\", 5);\n        i0.ɵɵtext(16, \"Organization 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 5);\n        i0.ɵɵtext(18, \"Organization 3\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"mat-sidenav-content\")(20, \"mat-toolbar\", 6)(21, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_21_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(_r0.toggle());\n        });\n        i0.ɵɵelementStart(22, \"mat-icon\", 8);\n        i0.ɵɵtext(23, \"menu\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25, \"Organization Home\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"span\", 9);\n        i0.ɵɵelementStart(27, \"p\");\n        i0.ɵɵtext(28, \"Hello,\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"a\", 10);\n        i0.ɵɵtext(30, \"userName\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵprojection(31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"app-device-table\", 11)(33, \"mat-divider\")(34, \"app-device-map\", 11);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"mode\", \"over\")(\"opened\", false);\n        i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(5, 5, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n        i0.ɵɵadvance(29);\n        i0.ɵɵproperty(\"Devicelist\", ctx.dataSource);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"Devicelist\", ctx.dataSource);\n      }\n    },\n    dependencies: [MatToolbarModule, i1.MatToolbar, MatButtonModule, i2.MatButton, i2.MatIconButton, MatSidenavModule, i3.MatSidenav, i3.MatSidenavContainer, i3.MatSidenavContent, MatIconModule, i4.MatIcon, MatListModule, i5.MatNavList, i5.MatListItem, i6.MatDivider, CommonModule, i7.AsyncPipe],\n    styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n    height: 100%;\\n}\\n\\n.sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\\n    background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n    position: sticky;\\n    top: 0;\\n    z-index: 1;\\n}\\n\\n.push-links-right[_ngcontent-%COMP%] {\\n    \\n\\n    flex: 1 1 auto;\\n}\\n\\n\\n\\nmat-toolbar[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    \\n\\n    display: inline-block;\\n    margin: 0 10px;\\n    color: white;\\n    text-decoration: none;\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    \\n\\n    display: inline-block;\\n    margin: 0 0px;\\n    color: white;\\n    text-decoration: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixNQUFNO0lBQ04sVUFBVTtBQUNkOztBQUVBO0lBQ0ksK0hBQStIO0lBQy9ILGNBQWM7QUFDbEI7O0FBRUEsaUZBQWlGO0FBQ2pGO0lBQ0ksMkVBQTJFO0lBQzNFLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2QsWUFBWTtJQUNaLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLDJFQUEyRTtJQUMzRSxxQkFBcUI7SUFDckIsYUFBYTtJQUNiLFlBQVk7SUFDWixxQkFBcUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZW5hdi1jb250YWluZXIge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4uc2lkZW5hdiAubWF0LXRvb2xiYXIge1xyXG4gICAgYmFja2dyb3VuZDogaW5oZXJpdDtcclxufVxyXG5cclxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcclxuICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4ucHVzaC1saW5rcy1yaWdodCB7XHJcbiAgICAvKiBUaGUgdGhyZWUgdmFsdWVzIGFyZSBncm93LCBzaHJpbmssIGFuZCBiYXNpcywgdGhlIHNwYW4gd2lsbCBncm93IG9yIHNocmluayB0byBmaWxsIHRoZSBjb250YWluZXIsIGluIHRoaXMgY2FzZSB0aGUgdG9vbGJhciAqL1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuXHJcbi8qIFNlbGVjdHMgdGhlIHRvb2xiYXIgbWF0ZXJpYWwsIGFuZCBhc3NpZ25zIHRoZSBDU1MgdG8gYWxsIHRoZSBsaW5rcyB3aXRoaW4gaXQgKi9cclxubWF0LXRvb2xiYXIgYSB7XHJcbiAgICAvKiBEaXNwbGF5IGlubGluZS1ibG9jayBjb25zaWRlcnMgdGhlIG1hcmdpbnMgYW5kIHNldHMgYSB3aWR0aCBhbmQgaGVpZ2h0ICovXHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW46IDAgMTBweDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxubWF0LXRvb2xiYXIgcCB7XHJcbiAgICAvKiBEaXNwbGF5IGlubGluZS1ibG9jayBjb25zaWRlcnMgdGhlIG1hcmdpbnMgYW5kIHNldHMgYSB3aWR0aCBhbmQgaGVpZ2h0ICovXHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW46IDAgMHB4O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}\n__decorate([Input()], DashboardComponent.prototype, \"Devicelist\", void 0);","map":{"version":3,"names":["inject","CommonModule","BreakpointObserver","Breakpoints","map","shareReplay","MatToolbarModule","MatButtonModule","MatSidenavModule","MatIconModule","MatListModule","DashboardComponent","constructor","breakpointObserver","isHandset$","observe","Handset","pipe","result","matches","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","ngContentSelectors","_c0","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_Template_button_click_21_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","toggle","ɵɵelement","ɵɵprojection","ɵɵadvance","ɵɵproperty","ɵɵattribute","ɵɵpipeBind1","dataSource","i1","MatToolbar","i2","MatButton","MatIconButton","i3","MatSidenav","MatSidenavContainer","MatSidenavContent","i4","MatIcon","i5","MatNavList","MatListItem","i6","MatDivider","i7","AsyncPipe","styles","__decorate","Input"],"sources":["/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/dashboard/dashboard.component.ts","/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  standalone: true,\n  imports: [\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    CommonModule,\n  ],\n})\nexport class DashboardComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n  @Input() Devicelist!: DeviceElement [];\n\n}\n","<p>dashboard works!</p>\n<!--This is the side nave container, and it wraps everything because otherwaise the side bar wouldn't be able to pop out over page-->\n<mat-sidenav-container class=\"sidenav-container\">\n    <!-- Can add ngclass that defines a hidden which only shows the hamburger side nav if the user is on handheld mode, mode makes the side bar either push or appear over main page -->\n    <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport=\"false\"\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"'over'\"\n    [opened]=\"false\"\n    >\n    <mat-toolbar>Organizations</mat-toolbar>\n    <button mat-raised-button color=\"accent\">Add</button>\n    <button mat-raised-button color=\"warn\">Remove</button>\n    <mat-nav-list>\n        <a mat-list-item href=\"#\">Organization 1</a>\n        <a mat-list-item href=\"#\">Organization 2</a>\n        <a mat-list-item href=\"#\">Organization 3</a>\n    </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n        <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n        </button>\n        <p>Organization Home</p>\n        <span class=\"push-links-right\"></span>\n        <p>Hello,</p>\n        <a href=\"#\">userName</a>\n    </mat-toolbar>\n    <!-- Add Content Here, ng-content is used for angular content projection so we can add stuff in tool-bar wrapper in app html -->\n    <ng-content></ng-content>\n    </mat-sidenav-content>\n    \n    <app-device-table [Devicelist]=\"dataSource\"></app-device-table>\n\n    <mat-divider></mat-divider>\n\n    <app-device-map [Devicelist]=\"dataSource\"></app-device-map>\n</mat-sidenav-container>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}