{"ast":null,"code":"import { inject } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/button\";\nimport * as i2 from \"@angular/material/icon\";\nimport * as i3 from \"@angular/material/toolbar\";\nimport * as i4 from \"@angular/material/sidenav\";\nimport * as i5 from \"@angular/material/list\";\nimport * as i6 from \"@angular/material/divider\";\nimport * as i7 from \"../device-map/device-map.component\";\nimport * as i8 from \"../device-table/device-table.component\";\nimport * as i9 from \"../device-data/device-data.component\";\nimport * as i10 from \"@angular/common\";\nconst _c0 = [\"*\"];\nconst ELEMENT_DATA = [\n  // Your data\n];\nexport class DashboardComponent {\n  constructor() {\n    this.breakpointObserver = inject(BreakpointObserver);\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n    this.dataSource = ELEMENT_DATA;\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    ngContentSelectors: _c0,\n    decls: 38,\n    vars: 8,\n    consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"false\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"accent\"], [\"mat-raised-button\", \"\", \"color\", \"warn\"], [\"mat-list-item\", \"\", \"href\", \"#\"], [\"color\", \"primary\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"], [1, \"push-links-right\"], [\"href\", \"#\"], [3, \"Devicelist\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"dashboard works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"mat-sidenav-container\", 0)(4, \"mat-sidenav\", 1, 2);\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵelementStart(7, \"mat-toolbar\");\n        i0.ɵɵtext(8, \"Organizations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 3);\n        i0.ɵɵtext(10, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 4);\n        i0.ɵɵtext(12, \"Remove\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-nav-list\")(14, \"a\", 5);\n        i0.ɵɵtext(15, \"Organization 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"a\", 5);\n        i0.ɵɵtext(17, \"Organization 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"a\", 5);\n        i0.ɵɵtext(19, \"Organization 3\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"mat-sidenav-content\")(21, \"mat-toolbar\", 6)(22, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_22_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(_r0.toggle());\n        });\n        i0.ɵɵelementStart(23, \"mat-icon\", 8);\n        i0.ɵɵtext(24, \"menu\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"p\");\n        i0.ɵɵtext(26, \"Organization Home\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"span\", 9)(28, \"p\");\n        i0.ɵɵtext(29, \"Hello,\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"a\", 10);\n        i0.ɵɵtext(31, \"User Name\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵprojection(32);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"div\");\n        i0.ɵɵelement(34, \"app-device-data\", 11)(35, \"app-device-table\", 11)(36, \"mat-divider\")(37, \"app-device-map\", 11);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"mode\", \"over\")(\"opened\", false);\n        i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(6, 6, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n        i0.ɵɵadvance(30);\n        i0.ɵɵproperty(\"Devicelist\", ctx.dataSource);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"Devicelist\", ctx.dataSource);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"Devicelist\", ctx.dataSource);\n      }\n    },\n    dependencies: [i1.MatButton, i1.MatIconButton, i2.MatIcon, i3.MatToolbar, i4.MatSidenav, i4.MatSidenavContainer, i4.MatSidenavContent, i5.MatNavList, i5.MatListItem, i6.MatDivider, i7.DeviceMapComponent, i8.DeviceTableComponent, i9.DeviceDataComponent, i10.AsyncPipe],\n    styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n    height: 100%;\\n}\\n\\n.sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\\n    background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n    position: sticky;\\n    top: 0;\\n    z-index: 1;\\n}\\n\\n.push-links-right[_ngcontent-%COMP%] {\\n    flex: 1 1 100%; \\n    display: flex;\\n    justify-content: flex-end; \\n    align-items: center; \\n    position: absolute;\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between; \\n\\n    align-items: center; \\n\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    color: white;\\n    text-decoration: none;\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    margin: 0 10px; \\n\\n    color: white;\\n    text-decoration: none;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixNQUFNO0lBQ04sVUFBVTtBQUNkOztBQUVBO0lBQ0ksY0FBYztJQUNkLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEIsRUFBRSw4Q0FBOEM7SUFDOUUsbUJBQW1CLEVBQUUsNEJBQTRCO0FBQ3JEOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLFlBQVk7SUFDWixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsY0FBYyxFQUFFLDJCQUEyQjtJQUMzQyxZQUFZO0lBQ1oscUJBQXFCO0FBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYtY29udGFpbmVyIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcclxuICAgIGJhY2tncm91bmQ6IGluaGVyaXQ7XHJcbn1cclxuXHJcbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XHJcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgei1pbmRleDogMTtcclxufVxyXG5cclxuLnB1c2gtbGlua3MtcmlnaHQge1xyXG4gICAgZmxleDogMSAxIDEwMCU7IFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IFxyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgXHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbn1cclxuXHJcbm1hdC10b29sYmFyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IC8qIEFsaWduIGl0ZW1zIGF0IGJvdGggZW5kcyBvZiB0aGUgY29udGFpbmVyICovXHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyAvKiBDZW50ZXIgaXRlbXMgdmVydGljYWxseSAqL1xyXG59XHJcblxyXG5tYXQtdG9vbGJhciBhIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxubWF0LXRvb2xiYXIgcCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW46IDAgMTBweDsgLyogQWRkIG1hcmdpbiBmb3Igc3BhY2luZyAqL1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["inject","BreakpointObserver","Breakpoints","map","shareReplay","ELEMENT_DATA","DashboardComponent","constructor","breakpointObserver","isHandset$","observe","Handset","pipe","result","matches","dataSource","_","_2","selectors","ngContentSelectors","_c0","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_Template_button_click_22_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","toggle","ɵɵprojection","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵattribute","ɵɵpipeBind1"],"sources":["/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/dashboard/dashboard.component.ts","/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/dashboard/dashboard.component.html"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n\nexport interface DeviceElement {\n  endDeviceId: number;\n  appId: number;\n  packetLoss: number[];\n  gatewayId: string;\n  time: string[];\n  batteryStat: number[];\n}\n\nconst ELEMENT_DATA: DeviceElement[] = [\n  // Your data\n];\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n})\nexport class DashboardComponent {\n  private breakpointObserver = inject(BreakpointObserver);\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  dataSource: DeviceElement[] = ELEMENT_DATA;\n}\n","<p>dashboard works!</p>\n<!--This is the side nave container, and it wraps everything because otherwaise the side bar wouldn't be able to pop out over page-->\n<div>   \n    <mat-sidenav-container class=\"sidenav-container\">\n        <!-- Can add ngclass that defines a hidden which only shows the hamburger side nav if the user is on handheld mode, mode makes the side bar either push or appear over main page -->\n        <mat-sidenav\n            #drawer\n            class=\"sidenav\"\n            fixedInViewport=\"false\"\n            [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n            [mode]=\"'over'\"\n            [opened]=\"false\"\n        >\n        <mat-toolbar>Organizations</mat-toolbar>\n        <button mat-raised-button color=\"accent\">Add</button>\n        <button mat-raised-button color=\"warn\">Remove</button>\n        <mat-nav-list>\n            <a mat-list-item href=\"#\">Organization 1</a>\n            <a mat-list-item href=\"#\">Organization 2</a>\n            <a mat-list-item href=\"#\">Organization 3</a>\n        </mat-nav-list>\n        </mat-sidenav>\n        <mat-sidenav-content>\n            <mat-toolbar color=\"primary\">\n                <button\n                    type=\"button\"\n                    aria-label=\"Toggle sidenav\"\n                    mat-icon-button\n                    (click)=\"drawer.toggle()\"\n                >\n                    <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n                </button>\n                <p>Organization Home</p>\n                <span class=\"push-links-right\">\n                    <p>Hello,</p>\n                    <a href=\"#\">User Name</a>\n                </span>\n            </mat-toolbar>\n            \n        <!-- Add Content Here, ng-content is used for angular content projection so we can add stuff in tool-bar wrapper in app html -->\n        <ng-content></ng-content>\n\n        </mat-sidenav-content>\n    </mat-sidenav-container>\n</div>\n\n<div>\n    <app-device-data [Devicelist]=\"dataSource\"></app-device-data>\n\n    <app-device-table [Devicelist]=\"dataSource\"></app-device-table>\n\n    <mat-divider></mat-divider>\n\n    <app-device-map [Devicelist]=\"dataSource\"></app-device-map>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}