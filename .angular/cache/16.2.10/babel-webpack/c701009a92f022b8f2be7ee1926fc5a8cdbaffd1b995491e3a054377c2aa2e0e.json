{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/icon\";\nfunction LoginComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.getErrorMessage());\n  }\n}\nfunction LoginComponent_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is incorrect or empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = \".container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: flex-start;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n    text-align: center;\\n    border-bottom: 2px solid;\\n    transform: translate(0%, -60%);\\n}\\n\\n.login-form[_ngcontent-%COMP%] {\\n    \\n\\n    border: 5px solid;\\n    position: absolute;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    padding: 100px;\\n    background-color: beige;\\n}\\n\\n.main-body[_ngcontent-%COMP%] {\\n    background-color: aliceblue;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHdCQUF3QjtJQUN4Qiw4QkFBOEI7QUFDbEM7O0FBRUE7SUFDSSwrRkFBK0Y7SUFDL0YsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsU0FBUztJQUNULGdDQUFnQztJQUNoQyxjQUFjO0lBQ2QsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksMkJBQTJCO0FBQy9CIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG59XHJcblxyXG4udGl0bGUge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCUsIC02MCUpO1xyXG59XHJcblxyXG4ubG9naW4tZm9ybSB7XHJcbiAgICAvKiBUaGlzIGFsaWducyB0aGUgZGl2IGZvcm0sIGhvcml6b250YWxseSBhbmQgdmVydGljYWxseSBzbyBpdCBiZWNvbWVzIHRoZSBjZW50ZXIgb2YgdGhlIHBhZ2UgKi9cclxuICAgIGJvcmRlcjogNXB4IHNvbGlkO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIHBhZGRpbmc6IDEwMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmVpZ2U7XHJcbn1cclxuXHJcbi5tYWluLWJvZHkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\";\nexport class LoginComponent {\n  constructor() {\n    this.emailField = new FormControl('', [Validators.required, Validators.email]);\n    this.hide = true;\n    this.email = '';\n    this.password = '';\n  }\n  //use the `` to allow connections to the variable in the declaration.\n  submitForm() {\n    var message = `Welcome ${this.email}`;\n    if (this.emailField.hasError('required') || this.emailField.hasError('email')) {\n      message = 'Email incorrect!';\n      alert(message);\n    } else {\n      alert(message);\n    }\n  }\n  // This method gets an error message based on what error that the user has produced, empty, or invalid email.\n  getErrorMessage() {\n    if (this.emailField.hasError('required')) {\n      return 'You must enter a value';\n    }\n    return this.emailField.hasError('email') ? 'Not a valid email' : '';\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 23,\n    vars: 10,\n    consts: [[1, \"main-body\"], [1, \"login-form\"], [1, \"title\"], [1, \"container\", 3, \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [\"color\", \"primary\"], [\"matInput\", \"\", \"name\", \"email\", \"placeholder\", \"good@example.com\", \"required\", \"\", 3, \"ngModel\", \"formControl\", \"ngModelChange\"], [4, \"ngIf\"], [\"matInput\", \"\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"type\", \"ngModelChange\"], [\"passwordInput\", \"ngModel\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"tool-bar\")(1, \"body\", 0)(2, \"mat-card\", 1)(3, \"h1\", 2);\n        i0.ɵɵtext(4, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(7, \"mat-form-field\", 5)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, LoginComponent_mat_error_11_Template, 2, 1, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 8, 9);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵelementStart(18, \"mat-icon\");\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, LoginComponent_mat_error_20_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 11);\n        i0.ɵɵtext(22, \" Login \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(6);\n        const _r2 = i0.ɵɵreference(16);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.email)(\"formControl\", ctx.emailField);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailField.invalid);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password)(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"aria-label\", \"Hide password\")(\"aria-pressed\", ctx.hide);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r2.invalid && (_r2.dirty || _r2.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i1.NgIf, i2.MatButton, i2.MatIconButton, i3.MatIcon],\n    styles: [_c0, _c0]\n  });\n}","map":{"version":3,"names":["FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","getErrorMessage","LoginComponent","constructor","emailField","required","email","hide","password","submitForm","message","hasError","alert","_","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_5_listener","LoginComponent_Template_input_ngModelChange_10_listener","$event","ɵɵtemplate","LoginComponent_mat_error_11_Template","LoginComponent_Template_input_ngModelChange_15_listener","LoginComponent_Template_button_click_17_listener","LoginComponent_mat_error_20_Template","ɵɵproperty","invalid","ɵɵattribute","_r2","dirty","touched","_r0"],"sources":["/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/login/login.component.ts","/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n  FormControl,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { NgIf } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCardModule } from '@angular/material/card';\nimport { ToolBarComponent } from '../tool-bar/tool-bar.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  standalone: true,\n  imports: [\n    ToolBarComponent,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgIf,\n  ],\n})\nexport class LoginComponent {\n  emailField = new FormControl('', [Validators.required, Validators.email]);\n  hide: boolean = true;\n  email: string = '';\n  password: string = '';\n\n  //use the `` to allow connections to the variable in the declaration.\n  submitForm() {\n    var message: string = `Welcome ${this.email}`;\n    if (\n      this.emailField.hasError('required') ||\n      this.emailField.hasError('email')\n    ) {\n      message = 'Email incorrect!';\n      alert(message);\n    } else {\n      alert(message);\n    }\n  }\n\n  // This method gets an error message based on what error that the user has produced, empty, or invalid email.\n  getErrorMessage() {\n    if (this.emailField.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.emailField.hasError('email') ? 'Not a valid email' : '';\n  }\n}\n","<tool-bar>\n    <link rel=\"stylesheet\" href=\"./login.component.css\">\n    <body class=\"main-body\">\n    <mat-card class=\"login-form\">\n        <h1 class=\"title\">Login</h1>\n        <form class=\"container\" (ngSubmit)=\"submitForm()\" #loginForm=\"ngForm\">\n        <mat-form-field color=\"primary\">\n            <mat-label>Email</mat-label>\n            <input\n            matInput\n            name=\"email\"\n            placeholder=\"good@example.com\"\n            [(ngModel)]=\"email\"\n            [formControl]=\"emailField\"\n            required\n            />\n            <mat-error *ngIf=\"emailField.invalid\">{{\n            getErrorMessage()\n            }}</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <!--Password-->\n            <mat-label>Password</mat-label>\n            <input\n            matInput\n            name=\"password\"\n            [(ngModel)]=\"password\"\n            #passwordInput=\"ngModel\"\n            [type]=\"hide ? 'password' : 'text'\"\n            required\n            />\n            <button\n            mat-icon-button\n            matSuffix\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n            >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n            </button>\n            <!--Declared for the password input above, if this field is either wrong or empty after user has selected the input-->\n            <mat-error\n            *ngIf=\"\n                passwordInput.invalid &&\n                (passwordInput.dirty || passwordInput.touched)\n            \"\n            >\n            Password is incorrect or empty</mat-error\n            >\n        </mat-form-field>\n        <!--Button will only be valid if all the required forms are filled out-->\n        <button mat-raised-button color=\"accent\" [disabled]=\"loginForm.invalid\">\n            Login\n        </button>\n        </form>\n    </mat-card>\n    </body>\n</tool-bar>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}