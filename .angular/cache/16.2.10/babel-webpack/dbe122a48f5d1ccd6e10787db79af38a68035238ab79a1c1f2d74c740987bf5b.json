{"ast":null,"code":"import { ChartService } from '../chart.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../chart.service\";\nexport class DeviceDataComponent {\n  constructor(chart) {\n    this.chart = chart;\n    this.showSpinner = false;\n  }\n  ngOnInit() {\n    this.chart.createPktLossChart(this.Devicelist[0]);\n  }\n  viewDeviceHealth(row) {\n    this.tempDevice = row;\n    this.chart.updateChartData(row);\n  }\n  viewDevicePktloss() {\n    this.chart.updateChartData(this.tempDevice);\n  }\n  viewDeviceBattery() {\n    this.chart.toBarChart(this.tempDevice);\n  }\n  loadSpinner() {\n    this.showSpinner = true;\n    setTimeout(() => {\n      this.showSpinner = false;\n    }, 250);\n  }\n  static #_ = this.ɵfac = function DeviceDataComponent_Factory(t) {\n    return new (t || DeviceDataComponent)(i0.ɵɵdirectiveInject(i1.ChartService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeviceDataComponent,\n    selectors: [[\"app-device-data\"]],\n    inputs: {\n      Devicelist: \"Devicelist\"\n    },\n    features: [i0.ɵɵProvidersFeature([ChartService])],\n    decls: 2,\n    vars: 0,\n    template: function DeviceDataComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"device-data works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".grid-container[_ngcontent-%COMP%] {\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n    grid-gap: 20px;\\n}\\n\\nmat-card[_ngcontent-%COMP%] {\\n    margin: 15px;\\n    padding: 15px;\\n}\\n\\nmat-card-actions[_ngcontent-%COMP%] {\\n    margin-top: 5px;\\n}\\n\\n*[_ngcontent-%COMP%] {\\n    background-color: aliceblue;\\n}\\n\\n\\n\\n.form-width[_ngcontent-%COMP%] {\\n    width: 50%;\\n}\\n\\ntd[_ngcontent-%COMP%] {\\n    padding-right: 10px;\\n} \\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGV2aWNlLWRhdGEvZGV2aWNlLWRhdGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQjs7OztBQUlBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLmdyaWQtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICBncmlkLWdhcDogMjBweDtcclxufVxyXG5cclxubWF0LWNhcmQge1xyXG4gICAgbWFyZ2luOiAxNXB4O1xyXG4gICAgcGFkZGluZzogMTVweDtcclxufVxyXG5cclxubWF0LWNhcmQtYWN0aW9ucyB7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbioge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYWxpY2VibHVlO1xyXG59XHJcblxyXG5cclxuXHJcbi5mb3JtLXdpZHRoIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbn1cclxuXHJcbnRkIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbn0gXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["ChartService","DeviceDataComponent","constructor","chart","showSpinner","ngOnInit","createPktLossChart","Devicelist","viewDeviceHealth","row","tempDevice","updateChartData","viewDevicePktloss","viewDeviceBattery","toBarChart","loadSpinner","setTimeout","_","i0","ɵɵdirectiveInject","i1","_2","selectors","inputs","features","ɵɵProvidersFeature","decls","vars","template","DeviceDataComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/device-data/device-data.component.ts","/home/cmcalvain/UNR/senior_year/senior_project/cssi_web_portal/src/app/device-data/device-data.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { DeviceElement } from '../app.component';\nimport { ChartService } from '../chart.service';\n\n@Component({\n  selector: 'app-device-data',\n  templateUrl: './device-data.component.html',\n  styleUrls: ['./device-data.component.css'],\n  providers: [ChartService,]\n})\nexport class DeviceDataComponent implements OnInit {\n  @Input() Devicelist!: DeviceElement [];\n\n  showSpinner: boolean = false;\n  tempDevice!: DeviceElement;\n  \n  constructor(private chart: ChartService){}\n\n  ngOnInit(): void {\n    this.chart.createPktLossChart(this.Devicelist[0]);\n  }\n  \n  viewDeviceHealth(row: DeviceElement)\n  {\n    this.tempDevice = row;\n    this.chart.updateChartData(row);\n  }\n\n  viewDevicePktloss()\n  {\n    this.chart.updateChartData(this.tempDevice);\n  }\n\n  viewDeviceBattery()\n  {\n    this.chart.toBarChart(this.tempDevice);\n  }\n  loadSpinner() {\n    this.showSpinner = true;\n    setTimeout(() =>{this.showSpinner = false}, 250)\n  }\n\n\n}\n","<p>device-data works!</p>\n"],"mappings":"AAEA,SAASA,YAAY,QAAQ,kBAAkB;;;AAQ/C,OAAM,MAAOC,mBAAmB;EAM9BC,YAAoBC,KAAmB;IAAnB,KAAAA,KAAK,GAALA,KAAK;IAHzB,KAAAC,WAAW,GAAY,KAAK;EAGa;EAEzCC,QAAQA,CAAA;IACN,IAAI,CAACF,KAAK,CAACG,kBAAkB,CAAC,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;EACnD;EAEAC,gBAAgBA,CAACC,GAAkB;IAEjC,IAAI,CAACC,UAAU,GAAGD,GAAG;IACrB,IAAI,CAACN,KAAK,CAACQ,eAAe,CAACF,GAAG,CAAC;EACjC;EAEAG,iBAAiBA,CAAA;IAEf,IAAI,CAACT,KAAK,CAACQ,eAAe,CAAC,IAAI,CAACD,UAAU,CAAC;EAC7C;EAEAG,iBAAiBA,CAAA;IAEf,IAAI,CAACV,KAAK,CAACW,UAAU,CAAC,IAAI,CAACJ,UAAU,CAAC;EACxC;EACAK,WAAWA,CAAA;IACT,IAAI,CAACX,WAAW,GAAG,IAAI;IACvBY,UAAU,CAAC,MAAK;MAAC,IAAI,CAACZ,WAAW,GAAG,KAAK;IAAA,CAAC,EAAE,GAAG,CAAC;EAClD;EAAC,QAAAa,CAAA,G;qBA9BUhB,mBAAmB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAApB,YAAA;EAAA;EAAA,QAAAqB,EAAA,G;UAAnBpB,mBAAmB;IAAAqB,SAAA;IAAAC,MAAA;MAAAhB,UAAA;IAAA;IAAAiB,QAAA,GAAAN,EAAA,CAAAO,kBAAA,CAFnB,CAACzB,YAAY,CAAE;IAAA0B,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR5BZ,EAAA,CAAAc,cAAA,QAAG;QAAAd,EAAA,CAAAe,MAAA,yBAAkB;QAAAf,EAAA,CAAAgB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}